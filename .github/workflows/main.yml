name: python-deployment

run-name: ${{ github.actor }} - ${{ github.ref_name}} -${{ github.sha }}

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  PythonVersion: 3.8
  DockerImageName: todoapp

jobs:
  python-ci:
    name: Python CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./src
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PythonVersion }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PythonVersion }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage flake8
          pip install -r requirements.txt

      - name: Run tests
        run: |
          python manage.py test

      - name: Generate Report
        run: |
          coverage run --source='.' manage.py test
          coverage report

      - name: Linting
        run: |
          flake8 . --show-source --statistics --exit-zero

      - name: Check Complexity
        run: |
          flake8 . --exit-zero --max-complexity=6

      - name: Upload python artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-artifact
          path: .

      - name: Upload helm artifact
        if: github.ref_name == 'main'
        uses: actions/upload-artifact@v4
        with:
          name: helm-artifact
          path: ${{ github.workspace }}/helm-charts

      - name: Upload cluster configs
        uses: actions/upload-artifact@v4
        with:
          name: cluster-artifact
          path: ./cluster.yml

  docker-ci:
    name: Build and Push Image
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    needs: python-ci
    steps:

    - uses: actions/download-artifact@v4
      name: Download python artifact
      with:
        name: python-artifact
        path: .

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        context: ./src
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DockerImageName }}:${{ github.sha }}

  helm-ci:
    runs-on: ubuntu-latest
    needs: python-ci
    if: github.ref_name == 'main'
    name: Helm CI
    steps:

    - uses: actions/download-artifact@v4
      with:
        name: helm-artifact
        path: .

    - name: Set Up Helm
      uses: azure/setup-helm@v4.2.0

    - name: Lint helm
      run: helm lint ./todoapp/

    - name: Template Helm
      run: helm template todoapp ./todoapp/ -f ./todoapp/values.yaml

    - name: Package Helm
      run: helm package ./todoapp

    - name: Upload Helm Artifact
      uses: actions/upload-artifact@v4
      with:
        name: helm-package
        path: ./*.tgz

  deploy-dev:
    name: Deploy Helm
    uses: ./.github/workflows/cluster-deploy.yml
    needs: [ helm-ci, docker-ci ]
    secrets: inherit
    with:
      environment: development

  deploy-staging:
    name: Deploy Helm
    uses: ./.github/workflows/cluster-deploy.yml
    needs: deploy-dev
    secrets: inherit
    with:
      environment: staging
      helm-values-path: ./todoapp/values/stg.yaml
      helm-release-name: todoapp-staging
